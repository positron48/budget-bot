// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: budget/v1/report.proto

package budgetv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MonthlyCategorySummaryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId   string          `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CategoryName string          `protobuf:"bytes,2,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"` // localized best-effort
	Type         TransactionType `protobuf:"varint,3,opt,name=type,proto3,enum=budget.v1.TransactionType" json:"type,omitempty"`     // income / expense
	Total        *Money          `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`                                   // in target currency
}

func (x *MonthlyCategorySummaryItem) Reset() {
	*x = MonthlyCategorySummaryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_budget_v1_report_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthlyCategorySummaryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyCategorySummaryItem) ProtoMessage() {}

func (x *MonthlyCategorySummaryItem) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_report_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyCategorySummaryItem.ProtoReflect.Descriptor instead.
func (*MonthlyCategorySummaryItem) Descriptor() ([]byte, []int) {
	return file_budget_v1_report_proto_rawDescGZIP(), []int{0}
}

func (x *MonthlyCategorySummaryItem) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *MonthlyCategorySummaryItem) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *MonthlyCategorySummaryItem) GetType() TransactionType {
	if x != nil {
		return x.Type
	}
	return TransactionType_TRANSACTION_TYPE_UNSPECIFIED
}

func (x *MonthlyCategorySummaryItem) GetTotal() *Money {
	if x != nil {
		return x.Total
	}
	return nil
}

type GetMonthlySummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year                  int32  `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`                                                                  // e.g., 2025
	Month                 int32  `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`                                                                // 1..12
	Locale                string `protobuf:"bytes,3,opt,name=locale,proto3" json:"locale,omitempty"`                                                               // preferred translation
	TargetCurrencyCode    string `protobuf:"bytes,4,opt,name=target_currency_code,json=targetCurrencyCode,proto3" json:"target_currency_code,omitempty"`           // if empty, use tenant default currency
	TimezoneOffsetMinutes int32  `protobuf:"varint,5,opt,name=timezone_offset_minutes,json=timezoneOffsetMinutes,proto3" json:"timezone_offset_minutes,omitempty"` // minutes to add to local time to get UTC (JS getTimezoneOffset)
}

func (x *GetMonthlySummaryRequest) Reset() {
	*x = GetMonthlySummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_budget_v1_report_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonthlySummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthlySummaryRequest) ProtoMessage() {}

func (x *GetMonthlySummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_report_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthlySummaryRequest.ProtoReflect.Descriptor instead.
func (*GetMonthlySummaryRequest) Descriptor() ([]byte, []int) {
	return file_budget_v1_report_proto_rawDescGZIP(), []int{1}
}

func (x *GetMonthlySummaryRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *GetMonthlySummaryRequest) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *GetMonthlySummaryRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *GetMonthlySummaryRequest) GetTargetCurrencyCode() string {
	if x != nil {
		return x.TargetCurrencyCode
	}
	return ""
}

func (x *GetMonthlySummaryRequest) GetTimezoneOffsetMinutes() int32 {
	if x != nil {
		return x.TimezoneOffsetMinutes
	}
	return 0
}

type GetMonthlySummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items        []*MonthlyCategorySummaryItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalIncome  *Money                        `protobuf:"bytes,2,opt,name=total_income,json=totalIncome,proto3" json:"total_income,omitempty"`    // in target currency
	TotalExpense *Money                        `protobuf:"bytes,3,opt,name=total_expense,json=totalExpense,proto3" json:"total_expense,omitempty"` // in target currency
}

func (x *GetMonthlySummaryResponse) Reset() {
	*x = GetMonthlySummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_budget_v1_report_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonthlySummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthlySummaryResponse) ProtoMessage() {}

func (x *GetMonthlySummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_report_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthlySummaryResponse.ProtoReflect.Descriptor instead.
func (*GetMonthlySummaryResponse) Descriptor() ([]byte, []int) {
	return file_budget_v1_report_proto_rawDescGZIP(), []int{2}
}

func (x *GetMonthlySummaryResponse) GetItems() []*MonthlyCategorySummaryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetMonthlySummaryResponse) GetTotalIncome() *Money {
	if x != nil {
		return x.TotalIncome
	}
	return nil
}

func (x *GetMonthlySummaryResponse) GetTotalExpense() *Money {
	if x != nil {
		return x.TotalExpense
	}
	return nil
}

var File_budget_v1_report_proto protoreflect.FileDescriptor

var file_budget_v1_report_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x1a, 0x16, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x01, 0x0a, 0x1a,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x26, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xc6, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x74, 0x69, 0x6d, 0x65,
	0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x73, 0x22, 0xc4, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x6c, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x6e,
	0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x32, 0x6f, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x23,
	0x2e, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e,
	0x34, 0x38, 0x2f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_budget_v1_report_proto_rawDescOnce sync.Once
	file_budget_v1_report_proto_rawDescData = file_budget_v1_report_proto_rawDesc
)

func file_budget_v1_report_proto_rawDescGZIP() []byte {
	file_budget_v1_report_proto_rawDescOnce.Do(func() {
		file_budget_v1_report_proto_rawDescData = protoimpl.X.CompressGZIP(file_budget_v1_report_proto_rawDescData)
	})
	return file_budget_v1_report_proto_rawDescData
}

var file_budget_v1_report_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_budget_v1_report_proto_goTypes = []interface{}{
	(*MonthlyCategorySummaryItem)(nil), // 0: budget.v1.MonthlyCategorySummaryItem
	(*GetMonthlySummaryRequest)(nil),   // 1: budget.v1.GetMonthlySummaryRequest
	(*GetMonthlySummaryResponse)(nil),  // 2: budget.v1.GetMonthlySummaryResponse
	(TransactionType)(0),               // 3: budget.v1.TransactionType
	(*Money)(nil),                      // 4: budget.v1.Money
}
var file_budget_v1_report_proto_depIdxs = []int32{
	3, // 0: budget.v1.MonthlyCategorySummaryItem.type:type_name -> budget.v1.TransactionType
	4, // 1: budget.v1.MonthlyCategorySummaryItem.total:type_name -> budget.v1.Money
	0, // 2: budget.v1.GetMonthlySummaryResponse.items:type_name -> budget.v1.MonthlyCategorySummaryItem
	4, // 3: budget.v1.GetMonthlySummaryResponse.total_income:type_name -> budget.v1.Money
	4, // 4: budget.v1.GetMonthlySummaryResponse.total_expense:type_name -> budget.v1.Money
	1, // 5: budget.v1.ReportService.GetMonthlySummary:input_type -> budget.v1.GetMonthlySummaryRequest
	2, // 6: budget.v1.ReportService.GetMonthlySummary:output_type -> budget.v1.GetMonthlySummaryResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_budget_v1_report_proto_init() }
func file_budget_v1_report_proto_init() {
	if File_budget_v1_report_proto != nil {
		return
	}
	file_budget_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_budget_v1_report_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthlyCategorySummaryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_budget_v1_report_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMonthlySummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_budget_v1_report_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMonthlySummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_budget_v1_report_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_budget_v1_report_proto_goTypes,
		DependencyIndexes: file_budget_v1_report_proto_depIdxs,
		MessageInfos:      file_budget_v1_report_proto_msgTypes,
	}.Build()
	File_budget_v1_report_proto = out.File
	file_budget_v1_report_proto_rawDesc = nil
	file_budget_v1_report_proto_goTypes = nil
	file_budget_v1_report_proto_depIdxs = nil
}
