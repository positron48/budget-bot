// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: budget/v1/import.proto

package budgetv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartCsvImportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename  string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Delimiter string `protobuf:"bytes,2,opt,name=delimiter,proto3" json:"delimiter,omitempty"` // default ","
	Quote     string `protobuf:"bytes,3,opt,name=quote,proto3" json:"quote,omitempty"`         // default '"'
	Encoding  string `protobuf:"bytes,4,opt,name=encoding,proto3" json:"encoding,omitempty"`   // default "utf-8"
}

func (x *StartCsvImportRequest) Reset() {
	*x = StartCsvImportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_budget_v1_import_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartCsvImportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartCsvImportRequest) ProtoMessage() {}

func (x *StartCsvImportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_import_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartCsvImportRequest.ProtoReflect.Descriptor instead.
func (*StartCsvImportRequest) Descriptor() ([]byte, []int) {
	return file_budget_v1_import_proto_rawDescGZIP(), []int{0}
}

func (x *StartCsvImportRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *StartCsvImportRequest) GetDelimiter() string {
	if x != nil {
		return x.Delimiter
	}
	return ""
}

func (x *StartCsvImportRequest) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *StartCsvImportRequest) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

type StartCsvImportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImportId string `protobuf:"bytes,1,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
}

func (x *StartCsvImportResponse) Reset() {
	*x = StartCsvImportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_budget_v1_import_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartCsvImportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartCsvImportResponse) ProtoMessage() {}

func (x *StartCsvImportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_import_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartCsvImportResponse.ProtoReflect.Descriptor instead.
func (*StartCsvImportResponse) Descriptor() ([]byte, []int) {
	return file_budget_v1_import_proto_rawDescGZIP(), []int{1}
}

func (x *StartCsvImportResponse) GetImportId() string {
	if x != nil {
		return x.ImportId
	}
	return ""
}

type UploadCsvChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImportId string `protobuf:"bytes,1,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
	Chunk    []byte `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Last     bool   `protobuf:"varint,3,opt,name=last,proto3" json:"last,omitempty"`
}

func (x *UploadCsvChunkRequest) Reset() {
	*x = UploadCsvChunkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_budget_v1_import_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadCsvChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadCsvChunkRequest) ProtoMessage() {}

func (x *UploadCsvChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_import_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadCsvChunkRequest.ProtoReflect.Descriptor instead.
func (*UploadCsvChunkRequest) Descriptor() ([]byte, []int) {
	return file_budget_v1_import_proto_rawDescGZIP(), []int{2}
}

func (x *UploadCsvChunkRequest) GetImportId() string {
	if x != nil {
		return x.ImportId
	}
	return ""
}

func (x *UploadCsvChunkRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *UploadCsvChunkRequest) GetLast() bool {
	if x != nil {
		return x.Last
	}
	return false
}

type UploadCsvChunkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceivedBytes int64 `protobuf:"varint,1,opt,name=received_bytes,json=receivedBytes,proto3" json:"received_bytes,omitempty"`
}

func (x *UploadCsvChunkResponse) Reset() {
	*x = UploadCsvChunkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_budget_v1_import_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadCsvChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadCsvChunkResponse) ProtoMessage() {}

func (x *UploadCsvChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_import_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadCsvChunkResponse.ProtoReflect.Descriptor instead.
func (*UploadCsvChunkResponse) Descriptor() ([]byte, []int) {
	return file_budget_v1_import_proto_rawDescGZIP(), []int{3}
}

func (x *UploadCsvChunkResponse) GetReceivedBytes() int64 {
	if x != nil {
		return x.ReceivedBytes
	}
	return 0
}

type CsvColumnMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateColumn         string `protobuf:"bytes,1,opt,name=date_column,json=dateColumn,proto3" json:"date_column,omitempty"`
	AmountColumn       string `protobuf:"bytes,2,opt,name=amount_column,json=amountColumn,proto3" json:"amount_column,omitempty"`
	CurrencyCodeColumn string `protobuf:"bytes,3,opt,name=currency_code_column,json=currencyCodeColumn,proto3" json:"currency_code_column,omitempty"` // optional
	TypeColumn         string `protobuf:"bytes,4,opt,name=type_column,json=typeColumn,proto3" json:"type_column,omitempty"`                           // income/expense or signed amounts
	CategoryColumn     string `protobuf:"bytes,5,opt,name=category_column,json=categoryColumn,proto3" json:"category_column,omitempty"`               // to map names â†’ category_ids
	CommentColumn      string `protobuf:"bytes,6,opt,name=comment_column,json=commentColumn,proto3" json:"comment_column,omitempty"`
}

func (x *CsvColumnMapping) Reset() {
	*x = CsvColumnMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_budget_v1_import_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsvColumnMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsvColumnMapping) ProtoMessage() {}

func (x *CsvColumnMapping) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_import_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsvColumnMapping.ProtoReflect.Descriptor instead.
func (*CsvColumnMapping) Descriptor() ([]byte, []int) {
	return file_budget_v1_import_proto_rawDescGZIP(), []int{4}
}

func (x *CsvColumnMapping) GetDateColumn() string {
	if x != nil {
		return x.DateColumn
	}
	return ""
}

func (x *CsvColumnMapping) GetAmountColumn() string {
	if x != nil {
		return x.AmountColumn
	}
	return ""
}

func (x *CsvColumnMapping) GetCurrencyCodeColumn() string {
	if x != nil {
		return x.CurrencyCodeColumn
	}
	return ""
}

func (x *CsvColumnMapping) GetTypeColumn() string {
	if x != nil {
		return x.TypeColumn
	}
	return ""
}

func (x *CsvColumnMapping) GetCategoryColumn() string {
	if x != nil {
		return x.CategoryColumn
	}
	return ""
}

func (x *CsvColumnMapping) GetCommentColumn() string {
	if x != nil {
		return x.CommentColumn
	}
	return ""
}

type ConfigureCsvMappingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImportId string            `protobuf:"bytes,1,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
	Mapping  *CsvColumnMapping `protobuf:"bytes,2,opt,name=mapping,proto3" json:"mapping,omitempty"`
}

func (x *ConfigureCsvMappingRequest) Reset() {
	*x = ConfigureCsvMappingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_budget_v1_import_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureCsvMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureCsvMappingRequest) ProtoMessage() {}

func (x *ConfigureCsvMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_import_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureCsvMappingRequest.ProtoReflect.Descriptor instead.
func (*ConfigureCsvMappingRequest) Descriptor() ([]byte, []int) {
	return file_budget_v1_import_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigureCsvMappingRequest) GetImportId() string {
	if x != nil {
		return x.ImportId
	}
	return ""
}

func (x *ConfigureCsvMappingRequest) GetMapping() *CsvColumnMapping {
	if x != nil {
		return x.Mapping
	}
	return nil
}

type ConfigureCsvMappingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigureCsvMappingResponse) Reset() {
	*x = ConfigureCsvMappingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_budget_v1_import_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureCsvMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureCsvMappingResponse) ProtoMessage() {}

func (x *ConfigureCsvMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_import_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureCsvMappingResponse.ProtoReflect.Descriptor instead.
func (*ConfigureCsvMappingResponse) Descriptor() ([]byte, []int) {
	return file_budget_v1_import_proto_rawDescGZIP(), []int{6}
}

type PreviewCsvImportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImportId string `protobuf:"bytes,1,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
	Limit    int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *PreviewCsvImportRequest) Reset() {
	*x = PreviewCsvImportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_budget_v1_import_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviewCsvImportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewCsvImportRequest) ProtoMessage() {}

func (x *PreviewCsvImportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_import_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewCsvImportRequest.ProtoReflect.Descriptor instead.
func (*PreviewCsvImportRequest) Descriptor() ([]byte, []int) {
	return file_budget_v1_import_proto_rawDescGZIP(), []int{7}
}

func (x *PreviewCsvImportRequest) GetImportId() string {
	if x != nil {
		return x.ImportId
	}
	return ""
}

func (x *PreviewCsvImportRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type PreviewCsvImportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalRows   int32 `protobuf:"varint,1,opt,name=total_rows,json=totalRows,proto3" json:"total_rows,omitempty"`
	ValidRows   int32 `protobuf:"varint,2,opt,name=valid_rows,json=validRows,proto3" json:"valid_rows,omitempty"`
	InvalidRows int32 `protobuf:"varint,3,opt,name=invalid_rows,json=invalidRows,proto3" json:"invalid_rows,omitempty"`
}

func (x *PreviewCsvImportResponse) Reset() {
	*x = PreviewCsvImportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_budget_v1_import_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviewCsvImportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewCsvImportResponse) ProtoMessage() {}

func (x *PreviewCsvImportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_import_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewCsvImportResponse.ProtoReflect.Descriptor instead.
func (*PreviewCsvImportResponse) Descriptor() ([]byte, []int) {
	return file_budget_v1_import_proto_rawDescGZIP(), []int{8}
}

func (x *PreviewCsvImportResponse) GetTotalRows() int32 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *PreviewCsvImportResponse) GetValidRows() int32 {
	if x != nil {
		return x.ValidRows
	}
	return 0
}

func (x *PreviewCsvImportResponse) GetInvalidRows() int32 {
	if x != nil {
		return x.InvalidRows
	}
	return 0
}

type CommitCsvImportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImportId string `protobuf:"bytes,1,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
	DryRun   bool   `protobuf:"varint,2,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
}

func (x *CommitCsvImportRequest) Reset() {
	*x = CommitCsvImportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_budget_v1_import_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitCsvImportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitCsvImportRequest) ProtoMessage() {}

func (x *CommitCsvImportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_import_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitCsvImportRequest.ProtoReflect.Descriptor instead.
func (*CommitCsvImportRequest) Descriptor() ([]byte, []int) {
	return file_budget_v1_import_proto_rawDescGZIP(), []int{9}
}

func (x *CommitCsvImportRequest) GetImportId() string {
	if x != nil {
		return x.ImportId
	}
	return ""
}

func (x *CommitCsvImportRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

type CommitCsvImportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inserted int32 `protobuf:"varint,1,opt,name=inserted,proto3" json:"inserted,omitempty"`
	Failed   int32 `protobuf:"varint,2,opt,name=failed,proto3" json:"failed,omitempty"`
}

func (x *CommitCsvImportResponse) Reset() {
	*x = CommitCsvImportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_budget_v1_import_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitCsvImportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitCsvImportResponse) ProtoMessage() {}

func (x *CommitCsvImportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_import_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitCsvImportResponse.ProtoReflect.Descriptor instead.
func (*CommitCsvImportResponse) Descriptor() ([]byte, []int) {
	return file_budget_v1_import_proto_rawDescGZIP(), []int{10}
}

func (x *CommitCsvImportResponse) GetInserted() int32 {
	if x != nil {
		return x.Inserted
	}
	return 0
}

func (x *CommitCsvImportResponse) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

var File_budget_v1_import_proto protoreflect.FileDescriptor

var file_budget_v1_import_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x73, 0x76,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x35, 0x0a, 0x16, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x73, 0x76, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64,
	0x22, 0x5e, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x73, 0x76, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74,
	0x22, 0x3f, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x73, 0x76, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x22, 0xfb, 0x01, 0x0a, 0x10, 0x43, 0x73, 0x76, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x30, 0x0a, 0x14,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22,
	0x70, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x43, 0x73, 0x76, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x6d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x75,
	0x64, 0x67, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x73, 0x76, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x43, 0x73,
	0x76, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x4c, 0x0a, 0x17, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x73, 0x76, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x7b,
	0x0a, 0x18, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x73, 0x76, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x4e, 0x0a, 0x16, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x73, 0x76, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x22, 0x4d, 0x0a, 0x17, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x73, 0x76, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x32, 0xda, 0x03, 0x0a, 0x0d, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x73, 0x76, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x20,
	0x2e, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x43, 0x73, 0x76, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x73, 0x76, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x73, 0x76,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x20, 0x2e, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x73, 0x76, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x73, 0x76, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x13, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x43, 0x73, 0x76, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x12, 0x25, 0x2e, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x43, 0x73, 0x76, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x62, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x43, 0x73,
	0x76, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5b, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x73, 0x76, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x2e, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x73, 0x76, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x62, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x73, 0x76, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a,
	0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x73, 0x76, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x21, 0x2e, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x43, 0x73, 0x76, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x73, 0x76, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x34, 0x38,
	0x2f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x62,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_budget_v1_import_proto_rawDescOnce sync.Once
	file_budget_v1_import_proto_rawDescData = file_budget_v1_import_proto_rawDesc
)

func file_budget_v1_import_proto_rawDescGZIP() []byte {
	file_budget_v1_import_proto_rawDescOnce.Do(func() {
		file_budget_v1_import_proto_rawDescData = protoimpl.X.CompressGZIP(file_budget_v1_import_proto_rawDescData)
	})
	return file_budget_v1_import_proto_rawDescData
}

var file_budget_v1_import_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_budget_v1_import_proto_goTypes = []interface{}{
	(*StartCsvImportRequest)(nil),       // 0: budget.v1.StartCsvImportRequest
	(*StartCsvImportResponse)(nil),      // 1: budget.v1.StartCsvImportResponse
	(*UploadCsvChunkRequest)(nil),       // 2: budget.v1.UploadCsvChunkRequest
	(*UploadCsvChunkResponse)(nil),      // 3: budget.v1.UploadCsvChunkResponse
	(*CsvColumnMapping)(nil),            // 4: budget.v1.CsvColumnMapping
	(*ConfigureCsvMappingRequest)(nil),  // 5: budget.v1.ConfigureCsvMappingRequest
	(*ConfigureCsvMappingResponse)(nil), // 6: budget.v1.ConfigureCsvMappingResponse
	(*PreviewCsvImportRequest)(nil),     // 7: budget.v1.PreviewCsvImportRequest
	(*PreviewCsvImportResponse)(nil),    // 8: budget.v1.PreviewCsvImportResponse
	(*CommitCsvImportRequest)(nil),      // 9: budget.v1.CommitCsvImportRequest
	(*CommitCsvImportResponse)(nil),     // 10: budget.v1.CommitCsvImportResponse
}
var file_budget_v1_import_proto_depIdxs = []int32{
	4,  // 0: budget.v1.ConfigureCsvMappingRequest.mapping:type_name -> budget.v1.CsvColumnMapping
	0,  // 1: budget.v1.ImportService.StartCsvImport:input_type -> budget.v1.StartCsvImportRequest
	2,  // 2: budget.v1.ImportService.UploadCsvChunk:input_type -> budget.v1.UploadCsvChunkRequest
	5,  // 3: budget.v1.ImportService.ConfigureCsvMapping:input_type -> budget.v1.ConfigureCsvMappingRequest
	7,  // 4: budget.v1.ImportService.PreviewCsvImport:input_type -> budget.v1.PreviewCsvImportRequest
	9,  // 5: budget.v1.ImportService.CommitCsvImport:input_type -> budget.v1.CommitCsvImportRequest
	1,  // 6: budget.v1.ImportService.StartCsvImport:output_type -> budget.v1.StartCsvImportResponse
	3,  // 7: budget.v1.ImportService.UploadCsvChunk:output_type -> budget.v1.UploadCsvChunkResponse
	6,  // 8: budget.v1.ImportService.ConfigureCsvMapping:output_type -> budget.v1.ConfigureCsvMappingResponse
	8,  // 9: budget.v1.ImportService.PreviewCsvImport:output_type -> budget.v1.PreviewCsvImportResponse
	10, // 10: budget.v1.ImportService.CommitCsvImport:output_type -> budget.v1.CommitCsvImportResponse
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_budget_v1_import_proto_init() }
func file_budget_v1_import_proto_init() {
	if File_budget_v1_import_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_budget_v1_import_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartCsvImportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_budget_v1_import_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartCsvImportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_budget_v1_import_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadCsvChunkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_budget_v1_import_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadCsvChunkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_budget_v1_import_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsvColumnMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_budget_v1_import_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureCsvMappingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_budget_v1_import_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureCsvMappingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_budget_v1_import_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviewCsvImportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_budget_v1_import_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviewCsvImportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_budget_v1_import_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitCsvImportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_budget_v1_import_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitCsvImportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_budget_v1_import_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_budget_v1_import_proto_goTypes,
		DependencyIndexes: file_budget_v1_import_proto_depIdxs,
		MessageInfos:      file_budget_v1_import_proto_msgTypes,
	}.Build()
	File_budget_v1_import_proto = out.File
	file_budget_v1_import_proto_rawDesc = nil
	file_budget_v1_import_proto_goTypes = nil
	file_budget_v1_import_proto_depIdxs = nil
}
